{"version":3,"sources":["webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/list.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/texts/hero.mdx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/texts/bottom.mdx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/homepage.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/homepage-query.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/homepage.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/blog-list-item.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/listing.tsx"],"names":["ItemTags","tags","useMinimalBlogConfig","tagsPath","basePath","Fragment","map","tag","i","key","slug","as","Link","to","replaceSlashes","name","List","children","sx","mb","ul","margin","padding","li","listStyle","a","variant","Text","props","console","warn","layoutProps","_frontmatter","MDXContent","components","mdxType","fontSize","fontWeight","color","src","alt","title","width","height","parentName","style","action","method","target","onsubmit","htmlFor","type","id","value","href","isMDXComponent","Title","makeShortcode","text","Homepage","posts","blogPath","p","mt","showTags","HomepageComponent","allPost","data","nodes","query","BlogListItem","post","date","Listing","className"],"mappings":"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","file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-homepage-query-tsx-3e76c3ccc4214f356a78.js","sourcesContent":["import React from \"react\"\nimport { Link as TLink } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <TLink as={Link} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </TLink>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","/** @jsx jsx */\nimport React from \"react\"\nimport { jsx } from \"theme-ui\"\n\ntype ListProps = {\n  children: React.ReactNode\n}\n\nconst List = ({ children }: ListProps) => (\n  <section\n    sx={{\n      mb: [5, 5, 6],\n      ul: { margin: 0, padding: 0 },\n      li: { listStyle: `none`, mb: 3 },\n      a: { variant: `links.listItem` },\n    }}\n  >\n    {children}\n  </section>\n)\n\nexport default List\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Text = makeShortcode(\"Text\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <Text sx={{\n      fontSize: [4, 5, 6],\n      fontWeight: `bold`,\n      color: `heading`\n    }} mdxType=\"Text\">\n  Hi, I'm Ruben Serradas\n    </Text>\n    <img src=\"/perfil.png\" alt=\"Ruben Serradas\" title=\"Ruben Serradas\" width=\"200\" height=\"200\" />\n    <p>{`Welcome! I write `}<a parentName=\"p\" {...{\n        \"href\": \"/blog\"\n      }}>{`ideas`}</a>{` and `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/RubenSerradas/\"\n      }}>{`software`}</a>{`.`}</p>\n    <p>{`I'm currently building `}<a parentName=\"p\" {...{\n        \"href\": \"https://getrocketlauncher.com\"\n      }}>{`Rocket Launcher`}</a>{`: a cloud computing platform\nfor Software as a Service web applications.`}</p>\n    <p>{`Every week I'll write an email with ideas and learnings. My interests are diverse\nlike philosophy, tech, writing and music.`}</p>\n    <p>{`If you want to stay in touch, subscribe to my newsletter.`}</p>\n    <br></br>\n    <form style={{\n      \"border\": \"1px solid #ccc\",\n      \"padding\": \"3px\",\n      \"textAlign\": \"center\"\n    }} action=\"https://tinyletter.com/rubenserradas\" method=\"post\" target=\"popupwindow\" onsubmit=\"window.open('https://tinyletter.com/rubenserradas', 'popupwindow', 'scrollbars=yes,width=800,height=600');return true\"><p><label htmlFor=\"tlemail\">Enter your email address</label></p><p><input type=\"text\" style={{\n          \"width\": \"140px\"\n        }} name=\"email\" id=\"tlemail\" /></p><input type=\"hidden\" value=\"1\" name=\"embed\" /><input type=\"submit\" value=\"Subscribe\" /><p><a href=\"https://tinyletter.com\" target=\"_blank\">powered by TinyLetter</a></p></form>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Title = makeShortcode(\"Title\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <Title text=\"Projects\" mdxType=\"Title\" />\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://getrocketlauncher.com/\"\n        }}>{`Rocket Launcher`}</a></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport Layout from \"./layout\"\nimport Title from \"./title\"\nimport Listing from \"./listing\"\nimport List from \"./list\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n// @ts-ignore\nimport Hero from \"../texts/hero\"\n// @ts-ignore\nimport Bottom from \"../texts/bottom\"\n\ntype PostsProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n}\n\nconst Homepage = ({ posts }: PostsProps) => {\n  const { basePath, blogPath } = useMinimalBlogConfig()\n\n  return (\n    <Layout>\n      <section sx={{ mb: [5, 6, 7], p: { fontSize: [1, 2, 3], mt: 2 } }}>\n        <Hero />\n      </section>\n      <Title text=\"Latest Posts\">\n        <Link to={replaceSlashes(`/${basePath}/${blogPath}`)}>Read all posts</Link>\n      </Title>\n      <Listing posts={posts} showTags={false} />\n      <List>\n        <Bottom />\n      </List>\n    </Layout>\n  )\n}\n\nexport default Homepage\n","import { graphql } from \"gatsby\"\nimport HomepageComponent from \"../components/homepage\"\n\nexport default HomepageComponent\n\nexport const query = graphql`\n  query($formatString: String!) {\n    allPost(sort: { fields: date, order: DESC }, limit: 3) {\n      nodes {\n        slug\n        title\n        date(formatString: $formatString)\n        excerpt\n        timeToRead\n        description\n        tags {\n          name\n          slug\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport Homepage from \"../../../components/homepage\"\n\ntype Props = {\n  data: {\n    allPost: any\n    [key: string]: string\n  }\n}\n\nexport default function MinimalBlogCoreHomepage({ data }: Props) {\n  const { allPost } = data\n\n  return <Homepage posts={allPost.nodes} />\n}\n","/** @jsx jsx */\nimport React from \"react\"\nimport { jsx, Link as TLink } from \"theme-ui\"\nimport { Box } from \"@theme-ui/components\"\nimport { Link } from \"gatsby\"\nimport ItemTags from \"./item-tags\"\n\ntype BlogListItemProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }\n  showTags?: boolean\n}\n\nconst BlogListItem = ({ post, showTags = true }: BlogListItemProps) => (\n  <Box mb={4}>\n    <TLink as={Link} to={post.slug} sx={{ fontSize: [1, 2, 3], color: `text` }}>\n      {post.title}\n    </TLink>\n    <p sx={{ color: `secondary`, mt: 1, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && showTags && (\n        <React.Fragment>\n          {` — `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n    </p>\n  </Box>\n)\n\nexport default BlogListItem\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport BlogListItem from \"./blog-list-item\"\n\ntype ListingProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n  className?: string\n  showTags?: boolean\n}\n\nconst Listing = ({ posts, className, showTags = true }: ListingProps) => (\n  <section sx={{ mb: [5, 6, 7] }} className={className}>\n    {posts.map((post) => (\n      <BlogListItem key={post.slug} post={post} showTags={showTags} />\n    ))}\n  </section>\n)\n\nexport default Listing\n"],"sourceRoot":""}